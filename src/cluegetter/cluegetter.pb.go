// Code generated by protoc-gen-go.
// source: cluegetter.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	cluegetter.proto

It has these top-level messages:
	Proto_MessageV1
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Proto_MessageV1_Verdict int32

const (
	Proto_MessageV1_PERMIT   Proto_MessageV1_Verdict = 0
	Proto_MessageV1_TEMPFAIL Proto_MessageV1_Verdict = 1
	Proto_MessageV1_REJECT   Proto_MessageV1_Verdict = 2
	Proto_MessageV1_ERROR    Proto_MessageV1_Verdict = 4
)

var Proto_MessageV1_Verdict_name = map[int32]string{
	0: "PERMIT",
	1: "TEMPFAIL",
	2: "REJECT",
	4: "ERROR",
}
var Proto_MessageV1_Verdict_value = map[string]int32{
	"PERMIT":   0,
	"TEMPFAIL": 1,
	"REJECT":   2,
	"ERROR":    4,
}

func (x Proto_MessageV1_Verdict) Enum() *Proto_MessageV1_Verdict {
	p := new(Proto_MessageV1_Verdict)
	*p = x
	return p
}
func (x Proto_MessageV1_Verdict) String() string {
	return proto.EnumName(Proto_MessageV1_Verdict_name, int32(x))
}
func (x *Proto_MessageV1_Verdict) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Proto_MessageV1_Verdict_value, data, "Proto_MessageV1_Verdict")
	if err != nil {
		return err
	}
	*x = Proto_MessageV1_Verdict(value)
	return nil
}

type Proto_MessageV1 struct {
	Session                *Proto_MessageV1_Session       `protobuf:"bytes,1,req,name=session" json:"session,omitempty"`
	Id                     *string                        `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	From                   *string                        `protobuf:"bytes,3,req,name=from" json:"from,omitempty"`
	Rcpt                   []string                       `protobuf:"bytes,4,rep,name=rcpt" json:"rcpt,omitempty"`
	Headers                []*Proto_MessageV1_Header      `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty"`
	Body                   []byte                         `protobuf:"bytes,6,req,name=body" json:"body,omitempty"`
	Verdict                *Proto_MessageV1_Verdict       `protobuf:"varint,7,req,name=verdict,enum=main.Proto_MessageV1_Verdict" json:"verdict,omitempty"`
	VerdictMsg             *string                        `protobuf:"bytes,8,req,name=verdictMsg" json:"verdictMsg,omitempty"`
	RejectScore            *float64                       `protobuf:"fixed64,9,req,name=rejectScore" json:"rejectScore,omitempty"`
	RejectScoreThreshold   *float64                       `protobuf:"fixed64,10,req,name=rejectScoreThreshold" json:"rejectScoreThreshold,omitempty"`
	TempfailScore          *float64                       `protobuf:"fixed64,11,req,name=tempfailScore" json:"tempfailScore,omitempty"`
	TempfailScoreThreshold *float64                       `protobuf:"fixed64,12,req,name=tempfailScoreThreshold" json:"tempfailScoreThreshold,omitempty"`
	CheckResults           []*Proto_MessageV1_CheckResult `protobuf:"bytes,13,rep,name=checkResults" json:"checkResults,omitempty"`
	XXX_unrecognized       []byte                         `json:"-"`
}

func (m *Proto_MessageV1) Reset()         { *m = Proto_MessageV1{} }
func (m *Proto_MessageV1) String() string { return proto.CompactTextString(m) }
func (*Proto_MessageV1) ProtoMessage()    {}

func (m *Proto_MessageV1) GetSession() *Proto_MessageV1_Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Proto_MessageV1) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Proto_MessageV1) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *Proto_MessageV1) GetRcpt() []string {
	if m != nil {
		return m.Rcpt
	}
	return nil
}

func (m *Proto_MessageV1) GetHeaders() []*Proto_MessageV1_Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Proto_MessageV1) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Proto_MessageV1) GetVerdict() Proto_MessageV1_Verdict {
	if m != nil && m.Verdict != nil {
		return *m.Verdict
	}
	return Proto_MessageV1_PERMIT
}

func (m *Proto_MessageV1) GetVerdictMsg() string {
	if m != nil && m.VerdictMsg != nil {
		return *m.VerdictMsg
	}
	return ""
}

func (m *Proto_MessageV1) GetRejectScore() float64 {
	if m != nil && m.RejectScore != nil {
		return *m.RejectScore
	}
	return 0
}

func (m *Proto_MessageV1) GetRejectScoreThreshold() float64 {
	if m != nil && m.RejectScoreThreshold != nil {
		return *m.RejectScoreThreshold
	}
	return 0
}

func (m *Proto_MessageV1) GetTempfailScore() float64 {
	if m != nil && m.TempfailScore != nil {
		return *m.TempfailScore
	}
	return 0
}

func (m *Proto_MessageV1) GetTempfailScoreThreshold() float64 {
	if m != nil && m.TempfailScoreThreshold != nil {
		return *m.TempfailScoreThreshold
	}
	return 0
}

func (m *Proto_MessageV1) GetCheckResults() []*Proto_MessageV1_CheckResult {
	if m != nil {
		return m.CheckResults
	}
	return nil
}

type Proto_MessageV1_Session struct {
	InstanceId       *uint64 `protobuf:"varint,1,req,name=instanceId" json:"instanceId,omitempty"`
	Id               []byte  `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	TimeStart        *uint64 `protobuf:"varint,3,req,name=timeStart" json:"timeStart,omitempty"`
	TimeEnd          *uint64 `protobuf:"varint,4,opt,name=timeEnd" json:"timeEnd,omitempty"`
	SaslUsername     *string `protobuf:"bytes,5,opt,name=saslUsername" json:"saslUsername,omitempty"`
	SaslSender       *string `protobuf:"bytes,6,opt,name=saslSender" json:"saslSender,omitempty"`
	SaslMethod       *string `protobuf:"bytes,7,opt,name=saslMethod" json:"saslMethod,omitempty"`
	CertIssuer       *string `protobuf:"bytes,8,opt,name=certIssuer" json:"certIssuer,omitempty"`
	CertSubject      *string `protobuf:"bytes,9,opt,name=certSubject" json:"certSubject,omitempty"`
	CipherBits       *uint32 `protobuf:"varint,10,opt,name=cipherBits" json:"cipherBits,omitempty"`
	Cipher           *string `protobuf:"bytes,11,opt,name=cipher" json:"cipher,omitempty"`
	TlsVersion       *string `protobuf:"bytes,12,opt,name=tlsVersion" json:"tlsVersion,omitempty"`
	Ip               *string `protobuf:"bytes,13,req,name=ip" json:"ip,omitempty"`
	ReverseDns       *string `protobuf:"bytes,14,opt,name=reverseDns" json:"reverseDns,omitempty"`
	Hostname         *string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	Helo             *string `protobuf:"bytes,16,opt,name=helo" json:"helo,omitempty"`
	MtaHostName      *string `protobuf:"bytes,17,opt,name=mtaHostName" json:"mtaHostName,omitempty"`
	MtaDaemonName    *string `protobuf:"bytes,18,opt,name=mtaDaemonName" json:"mtaDaemonName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Proto_MessageV1_Session) Reset()         { *m = Proto_MessageV1_Session{} }
func (m *Proto_MessageV1_Session) String() string { return proto.CompactTextString(m) }
func (*Proto_MessageV1_Session) ProtoMessage()    {}

func (m *Proto_MessageV1_Session) GetInstanceId() uint64 {
	if m != nil && m.InstanceId != nil {
		return *m.InstanceId
	}
	return 0
}

func (m *Proto_MessageV1_Session) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Proto_MessageV1_Session) GetTimeStart() uint64 {
	if m != nil && m.TimeStart != nil {
		return *m.TimeStart
	}
	return 0
}

func (m *Proto_MessageV1_Session) GetTimeEnd() uint64 {
	if m != nil && m.TimeEnd != nil {
		return *m.TimeEnd
	}
	return 0
}

func (m *Proto_MessageV1_Session) GetSaslUsername() string {
	if m != nil && m.SaslUsername != nil {
		return *m.SaslUsername
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetSaslSender() string {
	if m != nil && m.SaslSender != nil {
		return *m.SaslSender
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetSaslMethod() string {
	if m != nil && m.SaslMethod != nil {
		return *m.SaslMethod
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetCertIssuer() string {
	if m != nil && m.CertIssuer != nil {
		return *m.CertIssuer
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetCertSubject() string {
	if m != nil && m.CertSubject != nil {
		return *m.CertSubject
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetCipherBits() uint32 {
	if m != nil && m.CipherBits != nil {
		return *m.CipherBits
	}
	return 0
}

func (m *Proto_MessageV1_Session) GetCipher() string {
	if m != nil && m.Cipher != nil {
		return *m.Cipher
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetTlsVersion() string {
	if m != nil && m.TlsVersion != nil {
		return *m.TlsVersion
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetReverseDns() string {
	if m != nil && m.ReverseDns != nil {
		return *m.ReverseDns
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetHelo() string {
	if m != nil && m.Helo != nil {
		return *m.Helo
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetMtaHostName() string {
	if m != nil && m.MtaHostName != nil {
		return *m.MtaHostName
	}
	return ""
}

func (m *Proto_MessageV1_Session) GetMtaDaemonName() string {
	if m != nil && m.MtaDaemonName != nil {
		return *m.MtaDaemonName
	}
	return ""
}

type Proto_MessageV1_Header struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Proto_MessageV1_Header) Reset()         { *m = Proto_MessageV1_Header{} }
func (m *Proto_MessageV1_Header) String() string { return proto.CompactTextString(m) }
func (*Proto_MessageV1_Header) ProtoMessage()    {}

func (m *Proto_MessageV1_Header) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Proto_MessageV1_Header) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type Proto_MessageV1_CheckResult struct {
	MessageId        *string                  `protobuf:"bytes,1,req,name=message_id" json:"message_id,omitempty"`
	Module           *string                  `protobuf:"bytes,2,req,name=module" json:"module,omitempty"`
	Verdict          *Proto_MessageV1_Verdict `protobuf:"varint,3,req,name=verdict,enum=main.Proto_MessageV1_Verdict" json:"verdict,omitempty"`
	Score            *float64                 `protobuf:"fixed64,4,req,name=score" json:"score,omitempty"`
	WeightedScore    *float64                 `protobuf:"fixed64,5,req,name=weightedScore" json:"weightedScore,omitempty"`
	Duration         *float64                 `protobuf:"fixed64,6,req,name=duration" json:"duration,omitempty"`
	Determinants     []byte                   `protobuf:"bytes,7,opt,name=determinants" json:"determinants,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Proto_MessageV1_CheckResult) Reset()         { *m = Proto_MessageV1_CheckResult{} }
func (m *Proto_MessageV1_CheckResult) String() string { return proto.CompactTextString(m) }
func (*Proto_MessageV1_CheckResult) ProtoMessage()    {}

func (m *Proto_MessageV1_CheckResult) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *Proto_MessageV1_CheckResult) GetModule() string {
	if m != nil && m.Module != nil {
		return *m.Module
	}
	return ""
}

func (m *Proto_MessageV1_CheckResult) GetVerdict() Proto_MessageV1_Verdict {
	if m != nil && m.Verdict != nil {
		return *m.Verdict
	}
	return Proto_MessageV1_PERMIT
}

func (m *Proto_MessageV1_CheckResult) GetScore() float64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *Proto_MessageV1_CheckResult) GetWeightedScore() float64 {
	if m != nil && m.WeightedScore != nil {
		return *m.WeightedScore
	}
	return 0
}

func (m *Proto_MessageV1_CheckResult) GetDuration() float64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Proto_MessageV1_CheckResult) GetDeterminants() []byte {
	if m != nil {
		return m.Determinants
	}
	return nil
}

func init() {
	proto.RegisterType((*Proto_MessageV1)(nil), "main.Proto_Message_v1")
	proto.RegisterType((*Proto_MessageV1_Session)(nil), "main.Proto_Message_v1.Session")
	proto.RegisterType((*Proto_MessageV1_Header)(nil), "main.Proto_Message_v1.Header")
	proto.RegisterType((*Proto_MessageV1_CheckResult)(nil), "main.Proto_Message_v1.CheckResult")
	proto.RegisterEnum("main.Proto_MessageV1_Verdict", Proto_MessageV1_Verdict_name, Proto_MessageV1_Verdict_value)
}
